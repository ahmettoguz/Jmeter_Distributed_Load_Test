
===========================
# show running contianer
docker ps -a 
===========================
#Dockerfile
FROM

# set current working director
WORKDIR /app

# target files and destination file | relative ve absolute path
# COPY . ./  
COPY . /app

# build etmek için
RUN npm install

# porttan dinlemek için
EXPOSE 80

# container de run etmek için container run edildiği zaman yapar
CMD ["node", "server.js"]

===========================
image bir kere build olduktan sonra sen kodda ne yaparsan yap yaptığın değişiklik eklenmeyecektir.
yeni build alman gerekir.

===========================
optimized build almak için cache ler kullanılır. yani her komut tekrar tekrar çalışmaz. 
Sadece "Değişiklik olan layer'dan sonraki layerlar" yeniden tekralanır. Yani mesela biz yukarıda kopyaladığımız kodda bir değişiklik yaptığımız zaman bütün dosyalar tekrardan kopyalanıcak ve run npm install tekrardan çalışıcak. Bunu istemeyiz.
aşağıdaki gibi halledebiliriz.

#Dockerfile

FROM

WORKDIR /app

COPY package.json /app

COPY . /app

RUN npm install

EXPOSE 80

CMD ["node", "server.js"]

===========================
===========================
# image buildi için
docker build . 

#image ları gösterir
docker images

===========================
# container
# çalıştırır
docker run <id>

#expose edilen port publish olur böylece dinlenebilir. 80 -> Dockerfile | 3000 -> localport
docker run -p 3000:80 <id>

# durdurur
docker stop <name>

# başlatır
docker start <name>
===========================

# running contianerları gör
docker ps -a 
docker ps --help
===========================

attach ve detach
detach'de başlatılınca arka planda yürür logları göremezsin kendi consolunda -d filan yazılır.
attach modda görebilirsin 

docker run -it <name>
-it => interactive terminal
===========================

docker rm <name> <name> <name>

===========================
===========================
===========================
===========================
===========================
===========================
===========================
===========================
===========================
===========================
===========================
===========================
===========================
===========================
===========================
===========================
===========================
===========================